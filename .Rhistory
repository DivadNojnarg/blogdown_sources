)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 2",
depth = 5,
shiny::tags$h5("Card Content 2"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 3",
depth = 5,
shiny::tags$h5("Card Content 3"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinymaterial)
# Wrap shinymaterial apps in material_page
ui <- material_page(
title = "Basic Page + Parallax",
nav_bar_color = "grey lighten-4", #light-blue darken-1
tags$head(
tags$style(HTML("
#card {
text-align:center;
}
#image {
text-align:center;
}
"))
),
# Typically the image will be placed in a folder labeled 'www'
# at the same level as the application (server.R & ui.R)
material_parallax(
image_source =
"https://s-media-cache-ak0.pinimg.com/originals/32/00/71/32007153027a378558cb4ce680bcf927.jpg"
),
tags$h1("Page Content"),
material_row(
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 1",
depth = 5,
shiny::tags$h5("Card Content 3"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 2",
depth = 5,
shiny::tags$h5("Card Content 2"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 3",
depth = 5,
shiny::tags$h5("Card Content 3"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
library(shinymaterial)
# Wrap shinymaterial apps in material_page
ui <- material_page(
title = "Basic Page + Parallax",
nav_bar_color = "grey darken-4", #light-blue darken-1
tags$head(
tags$style(HTML("
#card {
text-align:center;
}
#image {
text-align:center;
}
"))
),
# Typically the image will be placed in a folder labeled 'www'
# at the same level as the application (server.R & ui.R)
material_parallax(
image_source =
"https://s-media-cache-ak0.pinimg.com/originals/32/00/71/32007153027a378558cb4ce680bcf927.jpg"
),
tags$h1("Page Content"),
material_row(
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 1",
depth = 5,
shiny::tags$h5("Card Content 3"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 2",
depth = 5,
shiny::tags$h5("Card Content 2"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
),
material_column(
width = 4,
material_card(
div(id = "card",
title = "Example Card 3",
depth = 5,
shiny::tags$h5("Card Content 3"),
div(id = "image",
a(href = "http://www.commentcamarche.net/forum/affich-2794190-lien-html-sur-une-image", target="_blank",
img(src="https://d30y9cdsu7xlg0.cloudfront.net/png/26262-200.png"))
)
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
shiny::runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/others/landing_page.R')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
install.packages("rAmCharts")
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
## Only run examples in interactive R sessions
if (interactive()) {
options(device.ask.default = FALSE)
ui <- fluidPage(
sliderInput("n", "Number of observations", 2, 1000, 500),
plotOutput("plot1"),
plotOutput("plot2"),
plotOutput("plot3")
)
server <- function(input, output, session) {
# A plot of fixed size
output$plot1 <- renderImage({
# A temp file to save the output. It will be deleted after renderImage
# sends it, because deleteFile=TRUE.
outfile <- tempfile(fileext='.png')
# Generate a png
png(outfile, width=400, height=400)
hist(rnorm(input$n))
dev.off()
# Return a list
list(src = outfile,
alt = "This is alternate text")
}, deleteFile = TRUE)
# A dynamically-sized plot
output$plot2 <- renderImage({
# Read plot2's width and height. These are reactive values, so this
# expression will re-run whenever these values change.
width  <- session$clientData$output_plot2_width
height <- session$clientData$output_plot2_height
# A temp file to save the output.
outfile <- tempfile(fileext='.png')
png(outfile, width=width, height=height)
hist(rnorm(input$n))
dev.off()
# Return a list containing the filename
list(src = outfile,
width = width,
height = height,
alt = "This is alternate text")
}, deleteFile = TRUE)
# Send a pre-rendered image, and don't delete the image after sending it
# NOTE: For this example to work, it would require files in a subdirectory
# named images/
output$plot3 <- renderImage({
# When input$n is 1, filename is ./images/image1.jpeg
filename <- normalizePath(file.path('./images',
paste('image', input$n, '.jpeg', sep='')))
# Return a list containing the filename
list(src = filename)
}, deleteFile = FALSE)
}
shinyApp(ui, server)
}
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
shiny::runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
rep(1,2)
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/others/landing_page.R')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/others/landing_page.R')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
d <- data.frame(id = 1:13,
shape = c("image","image","image","dot","dot","image","image","text","image","circle","circle","circle","image"),
# square are always scalable
image = c("food.png","intestine.png","feces.png","kidney.png","kidney.png","bone.png","kidney.png","kidney.png",
"parathyroid_gland.png","kidney.png","kidney.png","kidney.png","cells.png"),
label = c("Food", "Intestine"," Feces", "Plasma", "Rapid-Bone", "Bone", "Kidneys", "Urine", "PTH", "D3", "D3","FGF23","Cells"),
#title = out()[nrow(out()),"Ca_p"],
#title = c(rep(as.character(as.tags(sparklines::sparkline(out()[nrow(out()),"Ca_p"]))),17)), # does not work
x = c(8, 12, 18, 12, 0, 0, 22, 24, 12, 5, 18, 24, 8),
y = c(0, 2, 0, 6, 4, 8, 4, 8, 12, 2, 12, 10, 8),
color = list(background = "#97C2FC", border = "#97C2FC", highlight = list(background = "orange", border = "orange")),
size = c(rep(50,13)),
hidden = c(rep(FALSE,13)))
d
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
shiny::runApp(system.file("shiny", package = "visNetwork"))
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
shiny::runApp(system.file("shiny", package = "visNetwork"))
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
net <- visTreeEditor(data = iris)
net <- visTreeEditor(data = rpart(iris), main = "visTree Editor")
net
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
library(shiny)
ui <- shinyUI(fluidPage(
shinyjs::useShinyjs(),
#original checkbox group
checkboxGroupInput("a","A",choices = 1:7),
#additional checkbox group to identify how to work around multiple groups
checkboxGroupInput("b","B",choices = 1:7)
))
server <- shinyServer(function(input, output, session) {
#initialize reactive values (will use to store selected boxes to identify newest selection)
rv <- reactiveValues()
#initialize selected boxes to NULL
rv$selectedBoxes <- NULL
observeEvent(input$a, {
#extract newest selection by identifying which values are in a that have not been previously selected
newSelection <- input$a[which(!(input$a %in% rv$selectedBoxes))]
#create object that identifies newly selected checkbox (syntax found using selectorgadget)
subElement <- paste0("#a .checkbox:nth-child(", newSelection,") label")
#disable single checkbox of group
shinyjs::disable(selector=subElement)
#store all selected checkboxes
rv$selectedBoxes <- input$a
})
})
shinyApp(ui,server)
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
ui <- fluidPage(
useShinyjs(),
checkboxGroupInput("variable", "Variables to show:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
actionButton("btn", "Disable 'Cylinder' variable"),
tableOutput("data")
)
server <- function(input, output) {
output$data <- renderTable({
head(mtcars[, c("mpg", input$variable), drop = FALSE])
}, rownames = TRUE)
observeEvent(input$btn, {
shinyjs::disable(selector = "#variable input[value='cyl']")
})
}
shinyApp(ui, server)
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
devtools::install_github(“benubah/control”)
devtools::install_github("benubah/control")
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/case_studies_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
runApp('Dropbox/Post_Doc_Zurich_2017/WebApp_CaP_homeostasis/global_app')
setwd("~/Documents/blogdown_sources")
blogdown::build_site()
blogdown::build_site()
